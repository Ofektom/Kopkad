"""Final verification

Revision ID: 457ae9e9cb5c
Revises: b9e343f1cd4e
Create Date: 2025-09-23 14:59:08.460808

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '457ae9e9cb5c'
down_revision: Union[str, None] = 'b9e343f1cd4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('account_details_created_by_fkey', 'account_details', type_='foreignkey')
    op.drop_constraint('account_details_updated_by_fkey', 'account_details', type_='foreignkey')
    op.create_foreign_key(None, 'account_details', 'users', ['updated_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'account_details', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_constraint('businesses_agent_id_fkey', 'businesses', type_='foreignkey')
    op.create_foreign_key(None, 'businesses', 'users', ['agent_id'], ['id'])
    op.drop_constraint('commissions_agent_id_fkey', 'commissions', type_='foreignkey')
    op.drop_constraint('commissions_updated_by_fkey', 'commissions', type_='foreignkey')
    op.drop_constraint('commissions_created_by_fkey', 'commissions', type_='foreignkey')
    op.create_foreign_key(None, 'commissions', 'users', ['agent_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'commissions', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'commissions', 'users', ['updated_by'], ['id'], ondelete='SET NULL')
    op.drop_constraint('expense_cards_customer_id_fkey', 'expense_cards', type_='foreignkey')
    op.create_foreign_key(None, 'expense_cards', 'users', ['customer_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint('expenses_expense_card_id_fkey', 'expenses', type_='foreignkey')
    op.create_foreign_key(None, 'expenses', 'expense_cards', ['expense_card_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('payment_accounts_customer_id_fkey', 'payment_accounts', type_='foreignkey')
    op.drop_constraint('payment_accounts_created_by_fkey', 'payment_accounts', type_='foreignkey')
    op.drop_constraint('payment_accounts_updated_by_fkey', 'payment_accounts', type_='foreignkey')
    op.create_foreign_key(None, 'payment_accounts', 'users', ['updated_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'payment_accounts', 'users', ['customer_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'payment_accounts', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_constraint('payment_requests_created_by_fkey', 'payment_requests', type_='foreignkey')
    op.drop_constraint('payment_requests_savings_account_id_fkey', 'payment_requests', type_='foreignkey')
    op.drop_constraint('payment_requests_updated_by_fkey', 'payment_requests', type_='foreignkey')
    op.drop_constraint('payment_requests_account_details_id_fkey', 'payment_requests', type_='foreignkey')
    op.create_foreign_key(None, 'payment_requests', 'savings_accounts', ['savings_account_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'payment_requests', 'users', ['updated_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'payment_requests', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'payment_requests', 'account_details', ['account_details_id'], ['id'], ondelete='CASCADE')
    op.alter_column('savings_accounts', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('savings_accounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('savings_accounts_created_by_fkey', 'savings_accounts', type_='foreignkey')
    op.drop_constraint('savings_accounts_updated_by_fkey', 'savings_accounts', type_='foreignkey')
    op.create_foreign_key(None, 'savings_accounts', 'users', ['updated_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'savings_accounts', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.alter_column('savings_markings', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('savings_markings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('units', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('user_business_business_id_fkey', 'user_business', type_='foreignkey')
    op.create_foreign_key(None, 'user_business', 'businesses', ['business_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_business', type_='foreignkey')
    op.create_foreign_key('user_business_business_id_fkey', 'user_business', 'businesses', ['business_id'], ['id'], ondelete='CASCADE')
    op.alter_column('units', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('savings_markings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('savings_markings', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'savings_accounts', type_='foreignkey')
    op.drop_constraint(None, 'savings_accounts', type_='foreignkey')
    op.create_foreign_key('savings_accounts_updated_by_fkey', 'savings_accounts', 'users', ['updated_by'], ['id'])
    op.create_foreign_key('savings_accounts_created_by_fkey', 'savings_accounts', 'users', ['created_by'], ['id'])
    op.alter_column('savings_accounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('savings_accounts', 'unit_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'payment_requests', type_='foreignkey')
    op.drop_constraint(None, 'payment_requests', type_='foreignkey')
    op.drop_constraint(None, 'payment_requests', type_='foreignkey')
    op.drop_constraint(None, 'payment_requests', type_='foreignkey')
    op.create_foreign_key('payment_requests_account_details_id_fkey', 'payment_requests', 'account_details', ['account_details_id'], ['id'])
    op.create_foreign_key('payment_requests_updated_by_fkey', 'payment_requests', 'users', ['updated_by'], ['id'])
    op.create_foreign_key('payment_requests_savings_account_id_fkey', 'payment_requests', 'savings_accounts', ['savings_account_id'], ['id'])
    op.create_foreign_key('payment_requests_created_by_fkey', 'payment_requests', 'users', ['created_by'], ['id'])
    op.drop_constraint(None, 'payment_accounts', type_='foreignkey')
    op.drop_constraint(None, 'payment_accounts', type_='foreignkey')
    op.drop_constraint(None, 'payment_accounts', type_='foreignkey')
    op.create_foreign_key('payment_accounts_updated_by_fkey', 'payment_accounts', 'users', ['updated_by'], ['id'])
    op.create_foreign_key('payment_accounts_created_by_fkey', 'payment_accounts', 'users', ['created_by'], ['id'])
    op.create_foreign_key('payment_accounts_customer_id_fkey', 'payment_accounts', 'users', ['customer_id'], ['id'])
    op.drop_constraint(None, 'expenses', type_='foreignkey')
    op.create_foreign_key('expenses_expense_card_id_fkey', 'expenses', 'expense_cards', ['expense_card_id'], ['id'])
    op.drop_constraint(None, 'expense_cards', type_='foreignkey')
    op.create_foreign_key('expense_cards_customer_id_fkey', 'expense_cards', 'users', ['customer_id'], ['id'])
    op.drop_constraint(None, 'commissions', type_='foreignkey')
    op.drop_constraint(None, 'commissions', type_='foreignkey')
    op.drop_constraint(None, 'commissions', type_='foreignkey')
    op.create_foreign_key('commissions_created_by_fkey', 'commissions', 'users', ['created_by'], ['id'])
    op.create_foreign_key('commissions_updated_by_fkey', 'commissions', 'users', ['updated_by'], ['id'])
    op.create_foreign_key('commissions_agent_id_fkey', 'commissions', 'users', ['agent_id'], ['id'])
    op.drop_constraint(None, 'businesses', type_='foreignkey')
    op.create_foreign_key('businesses_agent_id_fkey', 'businesses', 'users', ['agent_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'account_details', type_='foreignkey')
    op.drop_constraint(None, 'account_details', type_='foreignkey')
    op.create_foreign_key('account_details_updated_by_fkey', 'account_details', 'users', ['updated_by'], ['id'])
    op.create_foreign_key('account_details_created_by_fkey', 'account_details', 'users', ['created_by'], ['id'])
    # ### end Alembic commands ###
